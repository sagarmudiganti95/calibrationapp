sap.ui.define([
	"com/prism/zpmcalcheck/controller/BaseController",
	"sap/ui/model/Filter",
	"sap/ui/model/FilterOperator",
	"sap/ui/model/Sorter",
	"sap/m/ViewSettingsDialog",
	"sap/ui/model/json/JSONModel",
	"../util/Formatter"
], function(BaseController, Filter, FilterOperator, Sorter, ViewSettingsDialog, JSONModel, formatter) {
	"use strict";
	return BaseController.extend("com.prism.zpmcalcheck.controller.Master", {

		formatter: formatter,
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf demo.com.FullToSplitApp.view.Master
		 */
		onInit: function() {
			this.oView = this.getView();
			// Saving Equipment List object reference in Base Controller
			// It will be accessible from Details Page for Next & Prev button event
			this.setMasterListRef(this.byId("idEquipList"));

			this.oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			this.oRouter.getRoute("SplitAppMaster").attachMatched(this._onMasterMatched, this);
		},

		_onMasterMatched: function() {
			this.oView.setBusy(true);
			var oDetailData = this.getOwnerComponent().getModel("oDetailModel").getData();

			var oMasterModel = new JSONModel();
			if (oDetailData) {
				var aFlag = [],
					oMasterList = [];
				this.byId("idSearch").setValue("");
				var oTaskList = oDetailData.ExReportData.results;
				// Getting Distinct Equipment Values
				for (var i = 0; i < oTaskList.length; i++) {
					if (!oTaskList[i].Equnr || aFlag[oTaskList[i].Equnr]) continue;
					aFlag[oTaskList[i].Equnr] = true;
					oMasterList.push(oTaskList[i]);
				}
				oMasterModel.setData(oMasterList);

				this.oView.setModel(oMasterModel, "oMasterModel");

			} else {
				// Move to Back Page and Show Message Toast for error - Sagar
				this.navToFirstPage();
			}
			this.oView.setBusy(false);
		},
		onSelectionChange: function(oEvent) {
				var oItem = oEvent.getParameter("listItem") || oEvent.getSource();
				var oBindingContext = oItem.getBindingContext("oMasterModel").getProperty();
				//var oBindingContext = oEvent.getSource().getBindingContext("oMasterModel").getProperty();
				var oQueryParam = this.getPrevAndNextEquipment(oBindingContext.Equnr);

				oQueryParam = JSON.stringify(oQueryParam);
				this.oRouter.navTo("DetailPage", {
					QueryEquipID: oQueryParam
				});
		},
		
		navToFirstPage: function(oEvent) {
			//This code was generated by the layout editor.
			this.oRouter.navTo("FullPage");
		},

		handleSortButtonPressed: function() {
			if (!this._oSortingDialog) {
				this._oSortingDialog = sap.ui.xmlfragment("com.prism.zpmcalcheck.view.SettingsDialog", this);

			}
			this._oSortingDialog.open();
		},

		createViewSettingsDialog: function(sDialogFragmentName) {
			var oDialog = this._mViewSettingsDialogs[sDialogFragmentName];
			var Device;
			if (!oDialog) {
				oDialog = sap.ui.xmlfragment(sDialogFragmentName, this);
				this._mViewSettingsDialogs[sDialogFragmentName] = oDialog;

				if (Device.system.desktop) {
					oDialog.addStyleClass("sapUiSizeCompact");
				}
			}
			return oDialog;
		},

		onSearch: function(oEvent) {

			var aFilters = [];
			var sQuery = oEvent.getSource().getValue();
			if (sQuery && sQuery.length > 0) {
				var aIntFilters = [];
				aIntFilters.push(new Filter("Equnr", FilterOperator.Contains, sQuery));
				aIntFilters.push(new Filter("Eqktx", FilterOperator.Contains, sQuery));

				if (sQuery && sQuery.trim().length === 11) {
					sQuery = sQuery.trim();
					if (sQuery.charAt(2) === "-" && sQuery.charAt(6) === "-") {
						var dFilterDate = new Date(sQuery);
						if (dFilterDate) {
							var dDateStart = new Date(dFilterDate);
							var dDateEnd = new Date(dFilterDate);

							// Set first date as start of day
							dDateStart.setMilliseconds(0);
							dDateStart.setSeconds(0);
							dDateStart.setMinutes(0);
							dDateStart.setHours(0);

							// Set second date as end of day
							dDateEnd.setMilliseconds(0);
							dDateEnd.setSeconds(59);
							dDateEnd.setMinutes(59);
							dDateEnd.setHours(23);

							aIntFilters.push(new Filter({
								path: "Gltrp",
								operator: sap.ui.model.FilterOperator.BT,
								value1: dDateStart,
								value2: dDateEnd
							}));
						}
					}
				}

				var filter = new Filter({

					// two filters
					filters: aIntFilters

				}); /*"Equnr", FilterOperator.Contains, sQuery*/
				aFilters.push(filter);

			}

			// update list binding
			var oList = this.byId("idEquipList");
			var oBinding = oList.getBinding("items");
			oBinding.filter(aFilters);
		},

		onConfirm: function(oEvent) {
			var oList = this.byId("idEquipList");
			var aSorters = [];
			var mParams = oEvent.getParameters();
			var oBinding = oList.getBinding("items");

			var sPath = mParams.sortItem.getKey();
			var bDescending = mParams.sortDescending;

			aSorters.push(new Sorter(sPath, bDescending));

			// apply the selected sort and group settings
			oBinding.sort(aSorters);

		}
	});
});